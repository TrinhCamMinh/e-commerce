{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useReviewsContext } from '../hooks/useReviewsContext';\nexport const useGetReview = () => {\n  _s();\n\n  const {\n    dispatch\n  } = useReviewsContext();\n\n  const getReviewByID = async id => {\n    const response = await fetch(`/api/review/${id}`);\n    const json = await response.json();\n\n    if (response.ok) {\n      dispatch({\n        type: 'SET_REVIEWS',\n        payload: json\n      });\n    }\n  };\n\n  const postReview = async (productID, name, comment) => {\n    const review = {\n      name,\n      comment\n    };\n    const reponse = await fetch(`/api/review/`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        productID,\n        review\n      })\n    });\n    const json = await reponse.json();\n\n    if (response.ok) {\n      dispatch({\n        type: 'CREATE_REVIEW',\n        payload: json\n      });\n    }\n  };\n\n  return {\n    getReviewByID,\n    postReview\n  };\n};\n\n_s(useGetReview, \"IAtV+ctnUE8VZBaU7wawN56GRqU=\", false, function () {\n  return [useReviewsContext];\n});","map":{"version":3,"names":["useReviewsContext","useGetReview","dispatch","getReviewByID","id","response","fetch","json","ok","type","payload","postReview","productID","name","comment","review","reponse","method","headers","body","JSON","stringify"],"sources":["D:/Workspace/MERN_STACK/e-commerce/frontend/src/hooks/useGetReview.jsx"],"sourcesContent":["import { useReviewsContext } from '../hooks/useReviewsContext';\r\nexport const useGetReview = () => {\r\n    const { dispatch } = useReviewsContext();\r\n\r\n    const getReviewByID = async (id) => {\r\n        const response = await fetch(`/api/review/${id}`);\r\n        const json = await response.json();\r\n        if (response.ok) {\r\n            dispatch({ type: 'SET_REVIEWS', payload: json });\r\n        }\r\n    };\r\n\r\n    const postReview = async (productID, name, comment) => {\r\n        const review = {\r\n            name,\r\n            comment,\r\n        };\r\n        const reponse = await fetch(`/api/review/`, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ productID, review }),\r\n        });\r\n        const json = await reponse.json();\r\n        if (response.ok) {\r\n            dispatch({ type: 'CREATE_REVIEW', payload: json });\r\n        }\r\n    };\r\n\r\n    return { getReviewByID, postReview };\r\n};\r\n"],"mappings":";;AAAA,SAASA,iBAAT,QAAkC,4BAAlC;AACA,OAAO,MAAMC,YAAY,GAAG,MAAM;EAAA;;EAC9B,MAAM;IAAEC;EAAF,IAAeF,iBAAiB,EAAtC;;EAEA,MAAMG,aAAa,GAAG,MAAOC,EAAP,IAAc;IAChC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,eAAcF,EAAG,EAAnB,CAA5B;IACA,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAT,EAAnB;;IACA,IAAIF,QAAQ,CAACG,EAAb,EAAiB;MACbN,QAAQ,CAAC;QAAEO,IAAI,EAAE,aAAR;QAAuBC,OAAO,EAAEH;MAAhC,CAAD,CAAR;IACH;EACJ,CAND;;EAQA,MAAMI,UAAU,GAAG,OAAOC,SAAP,EAAkBC,IAAlB,EAAwBC,OAAxB,KAAoC;IACnD,MAAMC,MAAM,GAAG;MACXF,IADW;MAEXC;IAFW,CAAf;IAIA,MAAME,OAAO,GAAG,MAAMV,KAAK,CAAE,cAAF,EAAiB;MACxCW,MAAM,EAAE,MADgC;MAExCC,OAAO,EAAE;QAAE,gBAAgB;MAAlB,CAF+B;MAGxCC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QAAET,SAAF;QAAaG;MAAb,CAAf;IAHkC,CAAjB,CAA3B;IAKA,MAAMR,IAAI,GAAG,MAAMS,OAAO,CAACT,IAAR,EAAnB;;IACA,IAAIF,QAAQ,CAACG,EAAb,EAAiB;MACbN,QAAQ,CAAC;QAAEO,IAAI,EAAE,eAAR;QAAyBC,OAAO,EAAEH;MAAlC,CAAD,CAAR;IACH;EACJ,CAdD;;EAgBA,OAAO;IAAEJ,aAAF;IAAiBQ;EAAjB,CAAP;AACH,CA5BM;;GAAMV,Y;UACYD,iB"},"metadata":{},"sourceType":"module"}